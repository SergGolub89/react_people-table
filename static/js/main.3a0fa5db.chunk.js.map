{"version":3,"sources":["Person.js","PeopleTable.js","App.js","index.js"],"names":["Person","state","personalId","_this2","this","person","props","personSex","sex","tooOld","born","longLiver","age","trClasses","concat","century","personSelected","id","react_default","a","createElement","onClick","setState","className","name","died","father","mother","React","Component","PeopleTable","_ref","people","sortPeople","map","src_Person","key","GetPeoples","Object","asyncToGenerator","regenerator_default","mark","_callee","response","wrap","_context","prev","next","fetch","sent","json","abrupt","stop","apply","arguments","sortedPeople","targetField","sort","b","localeCompare","App","visiblePeople","inputValue","checkPersonInfo","info","inputText","toLowerCase","includes","filterPeople","event","target","value","_this","prevState","filter","byName","byMother","byFather","toConsumableArray","peopleWithProps","index","objectSpread","Math","ceil","_this$state","length","onChange","type","placeholder","size","src_PeopleTable","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.3a0fa5db.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass Person extends React.Component {\n  state = {\n    personalId: null,\n  }\n\n  render() {\n    const { person } = this.props;\n    const { personalId } = this.state;\n\n    const personSex = (person.sex === 'm')\n      ? 'Person--male'\n      : 'Person--female';\n\n    const tooOld = (person.born < 1650)\n      ? 'tooOld'\n      : null;\n\n    const longLiver = (person.age >= 65)\n      ? 'longLiver'\n      : null;\n\n    const centuryClass = ` Person--lived-in-${person.century}`;\n    const trClasses = personSex + centuryClass;\n    const personSelected = (person.id === personalId) ? 'Person--selected' : '';\n\n    return (\n      <tr\n        onClick={() => this.setState({ personalId: person.id })}\n        className={`${trClasses} ${personSelected}`}\n      >\n        <td>{person.id}</td>\n        <td className={tooOld}>{person.name}</td>\n        <td>{person.sex}</td>\n        <td>{person.born}</td>\n        <td>{person.died}</td>\n        <td className={longLiver}>{person.age}</td>\n        <td>{person.century}</td>\n        <td>{person.father}</td>\n        <td>{person.mother}</td>\n      </tr>\n    );\n  }\n}\n\nPerson.propTypes = {\n  person: PropTypes.shape({\n    id: PropTypes.number,\n    name: PropTypes.string,\n    sex: PropTypes.string,\n    born: PropTypes.number,\n    died: PropTypes.number,\n    age: PropTypes.number,\n    century: PropTypes.number,\n    father: PropTypes.string,\n    mother: PropTypes.string,\n  }).isRequired,\n};\n\nexport default Person;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Person from './Person';\n\nconst PeopleTable = ({ people, sortPeople }) => (\n  <table className=\"PeopleTable\">\n    <thead>\n      <tr>\n        <th onClick={() => sortPeople('id')}>ID</th>\n        <th onClick={() => sortPeople('name')}>Name</th>\n        <th onClick={() => sortPeople('sex')}>Sex</th>\n        <th onClick={() => sortPeople('born')}>Born</th>\n        <th onClick={() => sortPeople('died')}>Died</th>\n        <th onClick={() => sortPeople('age')}>Age</th>\n        <th onClick={() => sortPeople('century')}>Century</th>\n        <th>Father</th>\n        <th>Mother</th>\n      </tr>\n    </thead>\n    <tbody>\n      {people.map(\n        person => (\n          <Person\n            key={person.id}\n            person={person}\n          />\n        )\n      )}\n    </tbody>\n  </table>\n);\n\nPeopleTable.propTypes = {\n  people: PropTypes.object,\n  sortPeople: PropTypes.func,\n}.isRequired;\n\nexport default PeopleTable;\n","import React, { Component } from 'react';\nimport PeopleTable from './PeopleTable';\nimport './App.css';\n\nconst GetPeoples = async() => {\n  const u = 'https://mate-academy.github.io/react_people-table/api/people.json';\n  const response = await fetch(u);\n  const people = await response.json();\n\n  return people;\n};\n\nconst sortedPeople = (people, targetField) => (\n  people.sort((a, b) => {\n    switch (typeof a[targetField]) {\n      case 'string':\n        return a[targetField].localeCompare(b[targetField]);\n\n      case 'boolean':\n      case 'number':\n        return a[targetField] - b[targetField];\n\n      default:\n        return 0;\n    }\n  }));\n\nclass App extends Component {\n  state = {\n    people: [],\n    visiblePeople: [],\n    inputValue: '',\n  }\n\n  async componentWillMount() {\n    const people = await GetPeoples();\n\n    const peopleWithProps = people.map((person, index) => ({\n      id: index + 1,\n      ...person,\n      age: person.died - person.born,\n      century: Math.ceil(person.died / 100),\n    }));\n\n    this.setState({\n      people: peopleWithProps,\n      visiblePeople: peopleWithProps,\n    });\n  }\n\n  checkPersonInfo = (info, inputText) => {\n    if (info) {\n      return info.toLowerCase().includes(inputText.toLowerCase());\n    }\n\n    return false;\n  }\n\n  filterPeople = (event) => {\n    const inputText = event.target.value;\n\n    this.setState(prevState => ({\n      inputValue: inputText,\n      visiblePeople: prevState.people.filter((person) => {\n        const byName = this.checkPersonInfo(person.name, inputText);\n        const byMother = this.checkPersonInfo(person.mother, inputText);\n        const byFather = this.checkPersonInfo(person.father, inputText);\n\n        return byName || byMother || byFather;\n      }),\n    }));\n  }\n\n  sortPeople = (targetField) => {\n    this.setState({\n      visiblePeople: sortedPeople([...this.people], targetField),\n    });\n  }\n\n  render() {\n    const { inputValue, visiblePeople } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>\n          Number of people:\n          {visiblePeople.length}\n        </h1>\n        <input\n          onChange={this.filterPeople}\n          value={inputValue}\n          type=\"text\"\n          placeholder=\"Serch by name, mother or father\"\n          size=\"40\"\n        />\n        <PeopleTable\n          people={visiblePeople}\n          sortPeople={this.sortPeople}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}